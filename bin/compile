#!/bin/bash
# usage: bin/compile <build-dir> <cache-dir> <env-dir>

set -eo pipefail

if [[ $(uname) == "Darwin" ]]; then
    sedf() { command sed -l "$@"; }
else
    sedf() { command sed -u "$@"; }
fi

indent() {
  sedf "s/^/       /"
}

tolower() {
    echo "$@" | tr "[:upper:]" "[:lower:]"
}

mkdir -p "$1" "$2"
build=$(cd "$1/" && pwd)
cache=$(cd "$2/" && pwd)
env_dir="$3"
arch=$(tolower $(uname -m))
if [[ $arch == "x86_64" ]]; then
    arch="amd64"
fi
plat=$(tolower $(uname))-$arch

if [[ -d "$env_dir" ]]; then
    for key in GOVERSION GOFILE GOURL; do
        if [[ -f "$env_dir/$key" ]]; then
            export "$key=$(cat "$env_dir/$key")"
        fi
    done
fi

ver=go${GOVERSION:-1.6.1}
file=${GOFILE:-$ver.$plat.tar.gz}
url=${GOURL:-https://storage.googleapis.com/golang/$file}

if [[ -e $build/bin && ! -d $build/bin ]]; then
    echo >&2 " !     File bin exists and is not a directory."
    exit 1
fi

if [[ -d $cache/$ver/go ]]; then
    echo "-----> Using $ver"
else
    rm -rf $cache/go* # be sure not to build up cruft
    mkdir -p $cache/$ver
    (
        cd $cache/$ver
        echo -n "-----> Installing $ver..."
        curl -s --show-error $url | tar zxf -
        echo " done"
    )
fi

export GOROOT=$cache/$ver/go
PATH=$GOROOT/bin:$PATH

# Install gb
gb_src="$build/vendor/src/github.com/constabulary/gb"
if [[ -d "$gb_src" ]]
then
    echo "-----> Found a vendored version of gb"
else
    echo "-----> WARNING: vendored version of gb was not found!"
    echo "Downloading master version from https://github.com/constabulary/gb" | indent
    mkdir -p "$gb_src"
    curl -sL https://github.com/constabulary/gb/archive/master.tar.gz \
    | tar -C "$gb_src" --strip-components=1 -xzf -
fi
echo "-----> Installing gb"
GOPATH="$build/vendor" go install github.com/constabulary/gb/... 2>&1 | indent

# Build the project
build_cmd="gb build all"
if [[ -x $build/bin/build ]]
then
    build_cmd=bin/build
fi
unset GIT_DIR # unset git dir or it will mess with goinstall

(
    cd $build
    echo "-----> Running: $build_cmd"
    PATH=$PATH:$build/vendor/bin $build_cmd | indent
)

rm -rf $build/pkg
rm -rf $build/vendor/bin
rm -rf $build/vendor/pkg

# Generate the .profile.d script
mkdir -p $build/.profile.d
app_dir="\$HOME" # the app dir on a dyno
if [[ $(uname) == "Darwin" ]]; then
    # the app dir on a developer's Mac
    app_dir=$build
fi
echo "PATH=\$PATH:$app_dir/bin" > $build/.profile.d/gbprofile.sh
